version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.12
    commands:
      - pip install --upgrade pip
      - pip install ansible
      - aws s3 cp s3://tudublin-ca-aws-keys/tudublin.pem /root/.ssh/tudublin.pem
      - chmod 400 /root/.ssh/tudublin.pem
  pre_build:
    commands:
      - echo $AWSRegion
      - aws cloudformation validate-template --template-body file://infranstructure.yaml --region $AWSRegion
  build:
    commands:
      - aws cloudformation deploy --region $AWSRegion --stack-name $BRANCH --template-file infranstructure.yaml --parameter-overrides InstanceName=$InstanceName
      # - aws cloudformation deploy --region $AWSRegion --stack-name $BRANCH --template-file infranstructure.yaml --parameter-overrides KeyName=$KeyName,AMI=$AMI,InstanceName=$InstanceName,SubnetId=$SubnetId,InstanceType=$InstanceType,VPCId=$VPCId
      - aws cloudformation wait stack-create-complete --stack-name $BRANCH --region $AWSRegion
      - export PUBLIC_IP=$(aws cloudformation describe-stacks --stack-name $BRANCH --query "Stacks[0].Outputs[?OutputKey=='PublicIP'].OutputValue" --output text)
      - ssh-keyscan -H $PUBLIC_IP >> ~/.ssh/known_hosts
      - echo "[web]" > inventory.ini
      - echo "$PUBLIC_IP ansible_user=ubuntu ansible_ssh_private_key_file=/root/.ssh/tudublin.pem ansible_ssh_common_args='-o StrictHostKeyChecking=no'" >> inventory.ini
      - export S3_BUCKET=$(aws cloudformation describe-stacks --stack-name $BRANCH --query "Stacks[0].Outputs[?OutputKey=='S3AssetBucket'].OutputValue" --output text)
      
  post_build:
    variables:
      systemd-service-content: |
        [Unit]
        Description=Weather App
        After=network.target
        [Service]
        Environment=S3_BUCKET=${S3_BUCKET},API_KEY=${API_KEY}
        User=ubuntu
        WorkingDirectory=/home/ubuntu
        ExecStart=/usr/bin/python3 /home/ubuntu/app.py
        Restart=always
        [Install]
        WantedBy=multi-user.target
    commands:
      - echo "$systemd-service-content" > weather-app.service
      - aws s3 cp  --recursive assets s3://$S3_BUCKET

artifacts:
  files:
    - '**/*'
  discard-paths: yes
