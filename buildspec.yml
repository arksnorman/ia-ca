version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.12
    commands:
      - pip install --upgrade pip
      - pip install ansible
      - aws s3 cp s3://tudublin-ca-aws-keys/tudublin.pem /root/.ssh/tudublin.pem
      - chmod 400 /root/.ssh/tudublin.pem
  pre_build:
    commands:
      - aws cloudformation validate-template --template-body file://infranstructure.yaml --region $AWSRegion
  build:
    commands:
      - aws cloudformation deploy --region $AWSRegion --stack-name $BRANCH --template-file infranstructure.yaml --parameter-overrides InstanceName=$InstanceName
      # - aws cloudformation deploy --region $AWSRegion --stack-name $BRANCH --template-file infranstructure.yaml --parameter-overrides KeyName=$KeyName,AMI=$AMI,InstanceName=$InstanceName,SubnetId=$SubnetId,InstanceType=$InstanceType,VPCId=$VPCId
      - aws cloudformation wait stack-create-complete --stack-name $BRANCH --region $AWSRegion
      - export PUBLIC_IP=$(aws cloudformation describe-stacks --stack-name $BRANCH --query "Stacks[0].Outputs[?OutputKey=='PublicIP'].OutputValue" --output text)
      # Wait for the instance to be ready
      - ssh-keyscan -H $PUBLIC_IP >> ~/.ssh/known_hosts || sleep 60 && ssh-keyscan -H $PUBLIC_IP >> ~/.ssh/known_hosts
      - echo "[web]" > inventory.ini
      - echo "$PUBLIC_IP ansible_user=ubuntu ansible_ssh_private_key_file=/root/.ssh/tudublin.pem ansible_ssh_common_args='-o StrictHostKeyChecking=no'" >> inventory.ini
      - export S3_BUCKET=$(aws cloudformation describe-stacks --stack-name $BRANCH --query "Stacks[0].Outputs[?OutputKey=='S3AssetBucket'].OutputValue" --output text)

  post_build:
    commands:
      - export S3_URL="https://$S3_BUCKET.s3.amazonaws.com"
      - |
        cat <<EOF > weather-app.service
        [Unit]
        Description=Weather App
        After=network.target

        [Service]
        Environment=S3_BUCKET_URL=${S3_URL},API_KEY=${API_KEY},BRANCH_NAME=${BRANCH}
        User=ubuntu
        WorkingDirectory=/home/ubuntu/weather-app
        ExecStart=/home/ubuntu/weather-app/.venv/bin/python3 /home/ubuntu/weather-app/app.py
        Restart=always

        [Install]
        WantedBy=multi-user.target
        EOF
      - aws s3 cp assets s3://$S3_BUCKET/ --recursive
      - ansible-playbook -i inventory.ini playbook.yaml

artifacts:
  files:
    - '**/*'
  discard-paths: yes
